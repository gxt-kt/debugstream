name: C++ GTest Build and Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          # - windows-2022
          - ubuntu-latest
          - ubuntu-18.04
          - macos-latest # arm64
          - macos-13
        compiler:
          - clang
        include: # 添加特定条件
          - os: ubuntu-latest
            compiler: [gcc, gcc-9]
          - os: ubuntu-20.04
            compiler: [gcc, gcc-9]

    steps:
      # 检查代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置 C++ 环境
      - name: Setup C++ environment
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}

      # 安装必要的依赖（仅适用于 Linux）
      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y cmake g++ make libgtest-dev
      # 安装必要的依赖（仅适用于 macOS）
      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install cmake 
          # 获取 macOS 版本号
          version=$(sw_vers -productVersion)
          # 提取主版本号
          major_version=$(echo "$version" | cut -d '.' -f 1)
          echo "major_version=${major_version}"
          # 检查版本是否大于等于 15
          if [ "$major_version" -ge 15 ]; then
            brew upgrade llvm
          fi
          git clone -b v1.15.x --depth=1 https://github.com/google/googletest
          cd googletest
          cmake -DBUILD_GTEST=ON -DBUILD_SHARED_LIBS=ON -S. -Bbuild
          cmake --build build -j
          sudo cmake --install build

      # 配置和构建项目
      - name: Configure and Build
        run: |
          cmake -S. -Bbuild
          cmake --build build -j

      # 运行 gtest 测试
      - name: Run GTest Tests
        run: |
          ./build/test/test_main
